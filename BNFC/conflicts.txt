-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.2 from ParGram.y
-----------------------------------------------------------------------------

state 135 contains 1 shift/reduce conflicts.

rule 77 is unused
rule 78 is unused
rule 79 is unused
rule 80 is unused
rule 81 is unused

terminal L_err is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Integer -> L_integ                                 (1)
	Ident -> L_ident                                   (2)
	Program -> ListTypeDeclaration ListDecl ListFunctionDeclaration 'main' Block   (3)
	Block -> '{' ListSt '}'                            (4)
	RBlock -> '{' ListSt 'return' Expression ';' '}'   (5)
	Decl -> Type Identifier ';'                        (6)
	Decl -> Type Identifier '=' Expression ';'         (7)
	Decl -> 'const' Type Identifier '=' Expression ';'   (8)
	ListDecl ->                                        (9)
	ListDecl -> ListDecl Decl                          (10)
	TypeDeclaration -> 'type' Identifier 'is' Type ';'   (11)
	ListTypeDeclaration ->                             (12)
	ListTypeDeclaration -> ListTypeDeclaration TypeDeclaration   (13)
	FunctionDeclaration -> 'function' Type Identifier '(' ListArguments ')' RBlock   (14)
	FunctionDeclaration -> 'void' Identifier '(' ListArguments ')' Block   (15)
	ListFunctionDeclaration ->                         (16)
	ListFunctionDeclaration -> ListFunctionDeclaration FunctionDeclaration   (17)
	CallArgs -> Expression                             (18)
	Arguments -> Type Identifier                       (19)
	ListCallArgs ->                                    (20)
	ListCallArgs -> CallArgs                           (21)
	ListCallArgs -> CallArgs ',' ListCallArgs          (22)
	ListArguments ->                                   (23)
	ListArguments -> Arguments                         (24)
	ListArguments -> Arguments ',' ListArguments       (25)
	St -> Decl ';'                                     (26)
	St -> Assignment ';'                               (27)
	St -> Expression ';'                               (28)
	St -> Identifier '(' ListCallArgs ')' ';'          (29)
	St -> 'while' '(' Exp ')' Block                    (30)
	St -> 'for' '(' Decl ';' Exp ';' Assignment ')' Block   (31)
	St -> 'guard' '(' ListIdentifier ')' 'in' Block    (32)
	St -> 'if (' Exp ')' Block ListEIf 'else' Block    (33)
	ListSt ->                                          (34)
	ListSt -> ListSt St                                (35)
	EIf -> 'else if (' Exp ')' Block                   (36)
	ListEIf ->                                         (37)
	ListEIf -> ListEIf EIf                             (38)
	ListIdentifier ->                                  (39)
	ListIdentifier -> Identifier                       (40)
	ListIdentifier -> Identifier ',' ListIdentifier    (41)
	Expression -> Exp                                  (42)
	Exp -> Exp '||' Exp1                               (43)
	Exp -> Exp '&&' Exp1                               (44)
	Exp -> Exp1                                        (45)
	Exp1 -> Exp1 '==' Exp2                             (46)
	Exp1 -> Exp2                                       (47)
	Exp2 -> Exp2 '<' Exp3                              (48)
	Exp2 -> Exp2 '>' Exp3                              (49)
	Exp2 -> Exp3                                       (50)
	Exp3 -> Exp3 '+' Exp4                              (51)
	Exp3 -> Exp3 '-' Exp4                              (52)
	Exp3 -> Exp4                                       (53)
	Exp4 -> Exp4 '*' Exp5                              (54)
	Exp4 -> Exp4 '/' Exp5                              (55)
	Exp4 -> Exp5                                       (56)
	Exp5 -> '-' Exp6                                   (57)
	Exp5 -> Exp6                                       (58)
	Exp6 -> Identifier '(' ListCallArgs ')'            (59)
	Exp6 -> Identifier                                 (60)
	Exp6 -> Integer                                    (61)
	Exp6 -> 'true'                                     (62)
	Exp6 -> 'false'                                    (63)
	Exp6 -> '(' Exp ')'                                (64)
	Assignment -> Identifier '=' Expression            (65)
	Assignment -> Identifier ArAssign Expression       (66)
	Assignment -> Identifier IncDec                    (67)
	Type -> 'int'                                      (68)
	Type -> 'bool'                                     (69)
	Identifier -> Ident                                (70)
	ArAssign -> '+='                                   (71)
	ArAssign -> '-='                                   (72)
	ArAssign -> '*='                                   (73)
	ArAssign -> '/='                                   (74)
	IncDec -> '++'                                     (75)
	IncDec -> '--'                                     (76)
	ComparisonOperator -> '>'                          (77)
	ComparisonOperator -> '<'                          (78)
	ComparisonOperator -> '=='                         (79)
	LogicalOperator -> '&&'                            (80)
	LogicalOperator -> '||'                            (81)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'&&'           { PT _ (TS _ 1) }
	'('            { PT _ (TS _ 2) }
	')'            { PT _ (TS _ 3) }
	'*'            { PT _ (TS _ 4) }
	'*='           { PT _ (TS _ 5) }
	'+'            { PT _ (TS _ 6) }
	'++'           { PT _ (TS _ 7) }
	'+='           { PT _ (TS _ 8) }
	','            { PT _ (TS _ 9) }
	'-'            { PT _ (TS _ 10) }
	'--'           { PT _ (TS _ 11) }
	'-='           { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	'/='           { PT _ (TS _ 14) }
	';'            { PT _ (TS _ 15) }
	'<'            { PT _ (TS _ 16) }
	'='            { PT _ (TS _ 17) }
	'=='           { PT _ (TS _ 18) }
	'>'            { PT _ (TS _ 19) }
	'bool'         { PT _ (TS _ 20) }
	'const'        { PT _ (TS _ 21) }
	'else'         { PT _ (TS _ 22) }
	'else if ('    { PT _ (TS _ 23) }
	'false'        { PT _ (TS _ 24) }
	'for'          { PT _ (TS _ 25) }
	'function'     { PT _ (TS _ 26) }
	'guard'        { PT _ (TS _ 27) }
	'if ('         { PT _ (TS _ 28) }
	'in'           { PT _ (TS _ 29) }
	'int'          { PT _ (TS _ 30) }
	'is'           { PT _ (TS _ 31) }
	'main'         { PT _ (TS _ 32) }
	'return'       { PT _ (TS _ 33) }
	'true'         { PT _ (TS _ 34) }
	'type'         { PT _ (TS _ 35) }
	'void'         { PT _ (TS _ 36) }
	'while'        { PT _ (TS _ 37) }
	'{'            { PT _ (TS _ 38) }
	'||'           { PT _ (TS _ 39) }
	'}'            { PT _ (TS _ 40) }
	L_integ        { PT _ (TI $$) }
	L_ident        { PT _ (TV $$) }
	L_err          { _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Integer         rule  1
	Ident           rule  2
	Program         rule  3
	Block           rule  4
	RBlock          rule  5
	Decl            rules 6, 7, 8
	ListDecl        rules 9, 10
	TypeDeclaration rule  11
	ListTypeDeclaration rules 12, 13
	FunctionDeclaration rules 14, 15
	ListFunctionDeclaration rules 16, 17
	CallArgs        rule  18
	Arguments       rule  19
	ListCallArgs    rules 20, 21, 22
	ListArguments   rules 23, 24, 25
	St              rules 26, 27, 28, 29, 30, 31, 32, 33
	ListSt          rules 34, 35
	EIf             rule  36
	ListEIf         rules 37, 38
	ListIdentifier  rules 39, 40, 41
	Expression      rule  42
	Exp             rules 43, 44, 45
	Exp1            rules 46, 47
	Exp2            rules 48, 49, 50
	Exp3            rules 51, 52, 53
	Exp4            rules 54, 55, 56
	Exp5            rules 57, 58
	Exp6            rules 59, 60, 61, 62, 63, 64
	Assignment      rules 65, 66, 67
	Type            rules 68, 69
	Identifier      rule  70
	ArAssign        rules 71, 72, 73, 74
	IncDec          rules 75, 76
	ComparisonOperator rules 77, 78, 79
	LogicalOperator rules 80, 81

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'bool'         reduce using rule 12
	'const'        reduce using rule 12
	'function'     reduce using rule 12
	'int'          reduce using rule 12
	'main'         reduce using rule 12
	'type'         reduce using rule 12
	'void'         reduce using rule 12

	Program        goto state 3
	ListTypeDeclarationgoto state 4

State 1


	L_integ        shift, and enter state 2


State 2

	Integer -> L_integ .                                (rule 1)

	'&&'           reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 4

	Program -> ListTypeDeclaration . ListDecl ListFunctionDeclaration 'main' Block    (rule 3)
	ListTypeDeclaration -> ListTypeDeclaration . TypeDeclaration    (rule 13)

	'bool'         reduce using rule 9
	'const'        reduce using rule 9
	'function'     reduce using rule 9
	'int'          reduce using rule 9
	'main'         reduce using rule 9
	'type'         shift, and enter state 7
	'void'         reduce using rule 9

	ListDecl       goto state 5
	TypeDeclarationgoto state 6

State 5

	Program -> ListTypeDeclaration ListDecl . ListFunctionDeclaration 'main' Block    (rule 3)
	ListDecl -> ListDecl . Decl                         (rule 10)

	'bool'         shift, and enter state 14
	'const'        shift, and enter state 15
	'function'     reduce using rule 16
	'int'          shift, and enter state 16
	'main'         reduce using rule 16
	'void'         reduce using rule 16

	Decl           goto state 11
	ListFunctionDeclarationgoto state 12
	Type           goto state 13

State 6

	ListTypeDeclaration -> ListTypeDeclaration TypeDeclaration .    (rule 13)

	'bool'         reduce using rule 13
	'const'        reduce using rule 13
	'function'     reduce using rule 13
	'int'          reduce using rule 13
	'main'         reduce using rule 13
	'type'         reduce using rule 13
	'void'         reduce using rule 13


State 7

	TypeDeclaration -> 'type' . Identifier 'is' Type ';'    (rule 11)

	L_ident        shift, and enter state 10

	Ident          goto state 8
	Identifier     goto state 9

State 8

	Identifier -> Ident .                               (rule 70)

	'&&'           reduce using rule 70
	'('            reduce using rule 70
	')'            reduce using rule 70
	'*'            reduce using rule 70
	'*='           reduce using rule 70
	'+'            reduce using rule 70
	'++'           reduce using rule 70
	'+='           reduce using rule 70
	','            reduce using rule 70
	'-'            reduce using rule 70
	'--'           reduce using rule 70
	'-='           reduce using rule 70
	'/'            reduce using rule 70
	'/='           reduce using rule 70
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'='            reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'is'           reduce using rule 70
	'||'           reduce using rule 70


State 9

	TypeDeclaration -> 'type' Identifier . 'is' Type ';'    (rule 11)

	'is'           shift, and enter state 23


State 10

	Ident -> L_ident .                                  (rule 2)

	'&&'           reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'*='           reduce using rule 2
	'+'            reduce using rule 2
	'++'           reduce using rule 2
	'+='           reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'--'           reduce using rule 2
	'-='           reduce using rule 2
	'/'            reduce using rule 2
	'/='           reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'='            reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'is'           reduce using rule 2
	'||'           reduce using rule 2


State 11

	ListDecl -> ListDecl Decl .                         (rule 10)

	'bool'         reduce using rule 10
	'const'        reduce using rule 10
	'function'     reduce using rule 10
	'int'          reduce using rule 10
	'main'         reduce using rule 10
	'void'         reduce using rule 10


State 12

	Program -> ListTypeDeclaration ListDecl ListFunctionDeclaration . 'main' Block    (rule 3)
	ListFunctionDeclaration -> ListFunctionDeclaration . FunctionDeclaration    (rule 17)

	'function'     shift, and enter state 20
	'main'         shift, and enter state 21
	'void'         shift, and enter state 22

	FunctionDeclarationgoto state 19

State 13

	Decl -> Type . Identifier ';'                       (rule 6)
	Decl -> Type . Identifier '=' Expression ';'        (rule 7)

	L_ident        shift, and enter state 10

	Ident          goto state 8
	Identifier     goto state 18

State 14

	Type -> 'bool' .                                    (rule 69)

	';'            reduce using rule 69
	L_ident        reduce using rule 69


State 15

	Decl -> 'const' . Type Identifier '=' Expression ';'    (rule 8)

	'bool'         shift, and enter state 14
	'int'          shift, and enter state 16

	Type           goto state 17

State 16

	Type -> 'int' .                                     (rule 68)

	';'            reduce using rule 68
	L_ident        reduce using rule 68


State 17

	Decl -> 'const' Type . Identifier '=' Expression ';'    (rule 8)

	L_ident        shift, and enter state 10

	Ident          goto state 8
	Identifier     goto state 31

State 18

	Decl -> Type Identifier . ';'                       (rule 6)
	Decl -> Type Identifier . '=' Expression ';'        (rule 7)

	';'            shift, and enter state 29
	'='            shift, and enter state 30


State 19

	ListFunctionDeclaration -> ListFunctionDeclaration FunctionDeclaration .    (rule 17)

	'function'     reduce using rule 17
	'main'         reduce using rule 17
	'void'         reduce using rule 17


State 20

	FunctionDeclaration -> 'function' . Type Identifier '(' ListArguments ')' RBlock    (rule 14)

	'bool'         shift, and enter state 14
	'int'          shift, and enter state 16

	Type           goto state 28

State 21

	Program -> ListTypeDeclaration ListDecl ListFunctionDeclaration 'main' . Block    (rule 3)

	'{'            shift, and enter state 27

	Block          goto state 26

State 22

	FunctionDeclaration -> 'void' . Identifier '(' ListArguments ')' Block    (rule 15)

	L_ident        shift, and enter state 10

	Ident          goto state 8
	Identifier     goto state 25

State 23

	TypeDeclaration -> 'type' Identifier 'is' . Type ';'    (rule 11)

	'bool'         shift, and enter state 14
	'int'          shift, and enter state 16

	Type           goto state 24

State 24

	TypeDeclaration -> 'type' Identifier 'is' Type . ';'    (rule 11)

	';'            shift, and enter state 50


State 25

	FunctionDeclaration -> 'void' Identifier . '(' ListArguments ')' Block    (rule 15)

	'('            shift, and enter state 49


State 26

	Program -> ListTypeDeclaration ListDecl ListFunctionDeclaration 'main' Block .    (rule 3)

	%eof           reduce using rule 3


State 27

	Block -> '{' . ListSt '}'                           (rule 4)

	'('            reduce using rule 34
	'-'            reduce using rule 34
	'bool'         reduce using rule 34
	'const'        reduce using rule 34
	'false'        reduce using rule 34
	'for'          reduce using rule 34
	'guard'        reduce using rule 34
	'if ('         reduce using rule 34
	'int'          reduce using rule 34
	'true'         reduce using rule 34
	'while'        reduce using rule 34
	'}'            reduce using rule 34
	L_integ        reduce using rule 34
	L_ident        reduce using rule 34

	ListSt         goto state 48

State 28

	FunctionDeclaration -> 'function' Type . Identifier '(' ListArguments ')' RBlock    (rule 14)

	L_ident        shift, and enter state 10

	Ident          goto state 8
	Identifier     goto state 47

State 29

	Decl -> Type Identifier ';' .                       (rule 6)

	';'            reduce using rule 6
	'bool'         reduce using rule 6
	'const'        reduce using rule 6
	'function'     reduce using rule 6
	'int'          reduce using rule 6
	'main'         reduce using rule 6
	'void'         reduce using rule 6


State 30

	Decl -> Type Identifier '=' . Expression ';'        (rule 7)

	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 45
	'true'         shift, and enter state 46
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	Expression     goto state 34
	Exp            goto state 35
	Exp1           goto state 36
	Exp2           goto state 37
	Exp3           goto state 38
	Exp4           goto state 39
	Exp5           goto state 40
	Exp6           goto state 41
	Identifier     goto state 42

State 31

	Decl -> 'const' Type Identifier . '=' Expression ';'    (rule 8)

	'='            shift, and enter state 32


State 32

	Decl -> 'const' Type Identifier '=' . Expression ';'    (rule 8)

	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 45
	'true'         shift, and enter state 46
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	Expression     goto state 78
	Exp            goto state 35
	Exp1           goto state 36
	Exp2           goto state 37
	Exp3           goto state 38
	Exp4           goto state 39
	Exp5           goto state 40
	Exp6           goto state 41
	Identifier     goto state 42

State 33

	Exp6 -> Integer .                                   (rule 61)

	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'||'           reduce using rule 61


State 34

	Decl -> Type Identifier '=' Expression . ';'        (rule 7)

	';'            shift, and enter state 77


State 35

	Expression -> Exp .                                 (rule 42)
	Exp -> Exp . '||' Exp1                              (rule 43)
	Exp -> Exp . '&&' Exp1                              (rule 44)

	'&&'           shift, and enter state 75
	')'            reduce using rule 42
	','            reduce using rule 42
	';'            reduce using rule 42
	'||'           shift, and enter state 76


State 36

	Exp -> Exp1 .                                       (rule 45)
	Exp1 -> Exp1 . '==' Exp2                            (rule 46)

	'&&'           reduce using rule 45
	')'            reduce using rule 45
	','            reduce using rule 45
	';'            reduce using rule 45
	'=='           shift, and enter state 74
	'||'           reduce using rule 45


State 37

	Exp1 -> Exp2 .                                      (rule 47)
	Exp2 -> Exp2 . '<' Exp3                             (rule 48)
	Exp2 -> Exp2 . '>' Exp3                             (rule 49)

	'&&'           reduce using rule 47
	')'            reduce using rule 47
	','            reduce using rule 47
	';'            reduce using rule 47
	'<'            shift, and enter state 72
	'=='           reduce using rule 47
	'>'            shift, and enter state 73
	'||'           reduce using rule 47


State 38

	Exp2 -> Exp3 .                                      (rule 50)
	Exp3 -> Exp3 . '+' Exp4                             (rule 51)
	Exp3 -> Exp3 . '-' Exp4                             (rule 52)

	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'+'            shift, and enter state 70
	','            reduce using rule 50
	'-'            shift, and enter state 71
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'||'           reduce using rule 50


State 39

	Exp3 -> Exp4 .                                      (rule 53)
	Exp4 -> Exp4 . '*' Exp5                             (rule 54)
	Exp4 -> Exp4 . '/' Exp5                             (rule 55)

	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            shift, and enter state 68
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            shift, and enter state 69
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'||'           reduce using rule 53


State 40

	Exp4 -> Exp5 .                                      (rule 56)

	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'||'           reduce using rule 56


State 41

	Exp5 -> Exp6 .                                      (rule 58)

	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'||'           reduce using rule 58


State 42

	Exp6 -> Identifier . '(' ListCallArgs ')'           (rule 59)
	Exp6 -> Identifier .                                (rule 60)

	'&&'           reduce using rule 60
	'('            shift, and enter state 67
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'||'           reduce using rule 60


State 43

	Exp6 -> '(' . Exp ')'                               (rule 64)

	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 45
	'true'         shift, and enter state 46
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	Exp            goto state 66
	Exp1           goto state 36
	Exp2           goto state 37
	Exp3           goto state 38
	Exp4           goto state 39
	Exp5           goto state 40
	Exp6           goto state 41
	Identifier     goto state 42

State 44

	Exp5 -> '-' . Exp6                                  (rule 57)

	'('            shift, and enter state 43
	'false'        shift, and enter state 45
	'true'         shift, and enter state 46
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	Exp6           goto state 65
	Identifier     goto state 42

State 45

	Exp6 -> 'false' .                                   (rule 63)

	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'||'           reduce using rule 63


State 46

	Exp6 -> 'true' .                                    (rule 62)

	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'||'           reduce using rule 62


State 47

	FunctionDeclaration -> 'function' Type Identifier . '(' ListArguments ')' RBlock    (rule 14)

	'('            shift, and enter state 64


State 48

	Block -> '{' ListSt . '}'                           (rule 4)
	ListSt -> ListSt . St                               (rule 35)

	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'bool'         shift, and enter state 14
	'const'        shift, and enter state 15
	'false'        shift, and enter state 45
	'for'          shift, and enter state 59
	'guard'        shift, and enter state 60
	'if ('         shift, and enter state 61
	'int'          shift, and enter state 16
	'true'         shift, and enter state 46
	'while'        shift, and enter state 62
	'}'            shift, and enter state 63
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	Decl           goto state 54
	St             goto state 55
	Expression     goto state 56
	Exp            goto state 35
	Exp1           goto state 36
	Exp2           goto state 37
	Exp3           goto state 38
	Exp4           goto state 39
	Exp5           goto state 40
	Exp6           goto state 41
	Assignment     goto state 57
	Type           goto state 13
	Identifier     goto state 58

State 49

	FunctionDeclaration -> 'void' Identifier '(' . ListArguments ')' Block    (rule 15)

	')'            reduce using rule 23
	'bool'         shift, and enter state 14
	'int'          shift, and enter state 16

	Arguments      goto state 51
	ListArguments  goto state 52
	Type           goto state 53

State 50

	TypeDeclaration -> 'type' Identifier 'is' Type ';' .    (rule 11)

	'bool'         reduce using rule 11
	'const'        reduce using rule 11
	'function'     reduce using rule 11
	'int'          reduce using rule 11
	'main'         reduce using rule 11
	'type'         reduce using rule 11
	'void'         reduce using rule 11


State 51

	ListArguments -> Arguments .                        (rule 24)
	ListArguments -> Arguments . ',' ListArguments      (rule 25)

	')'            reduce using rule 24
	','            shift, and enter state 113


State 52

	FunctionDeclaration -> 'void' Identifier '(' ListArguments . ')' Block    (rule 15)

	')'            shift, and enter state 112


State 53

	Arguments -> Type . Identifier                      (rule 19)

	L_ident        shift, and enter state 10

	Ident          goto state 8
	Identifier     goto state 111

State 54

	St -> Decl . ';'                                    (rule 26)

	';'            shift, and enter state 110


State 55

	ListSt -> ListSt St .                               (rule 35)

	'('            reduce using rule 35
	'-'            reduce using rule 35
	'bool'         reduce using rule 35
	'const'        reduce using rule 35
	'false'        reduce using rule 35
	'for'          reduce using rule 35
	'guard'        reduce using rule 35
	'if ('         reduce using rule 35
	'int'          reduce using rule 35
	'return'       reduce using rule 35
	'true'         reduce using rule 35
	'while'        reduce using rule 35
	'}'            reduce using rule 35
	L_integ        reduce using rule 35
	L_ident        reduce using rule 35


State 56

	St -> Expression . ';'                              (rule 28)

	';'            shift, and enter state 109


State 57

	St -> Assignment . ';'                              (rule 27)

	';'            shift, and enter state 108


State 58

	St -> Identifier . '(' ListCallArgs ')' ';'         (rule 29)
	Exp6 -> Identifier . '(' ListCallArgs ')'           (rule 59)
	Exp6 -> Identifier .                                (rule 60)
	Assignment -> Identifier . '=' Expression           (rule 65)
	Assignment -> Identifier . ArAssign Expression      (rule 66)
	Assignment -> Identifier . IncDec                   (rule 67)

	'&&'           reduce using rule 60
	'('            shift, and enter state 100
	'*'            reduce using rule 60
	'*='           shift, and enter state 101
	'+'            reduce using rule 60
	'++'           shift, and enter state 102
	'+='           shift, and enter state 103
	'-'            reduce using rule 60
	'--'           shift, and enter state 104
	'-='           shift, and enter state 105
	'/'            reduce using rule 60
	'/='           shift, and enter state 106
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'='            shift, and enter state 107
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'||'           reduce using rule 60

	ArAssign       goto state 98
	IncDec         goto state 99

State 59

	St -> 'for' . '(' Decl ';' Exp ';' Assignment ')' Block    (rule 31)

	'('            shift, and enter state 97


State 60

	St -> 'guard' . '(' ListIdentifier ')' 'in' Block    (rule 32)

	'('            shift, and enter state 96


State 61

	St -> 'if (' . Exp ')' Block ListEIf 'else' Block    (rule 33)

	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 45
	'true'         shift, and enter state 46
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	Exp            goto state 95
	Exp1           goto state 36
	Exp2           goto state 37
	Exp3           goto state 38
	Exp4           goto state 39
	Exp5           goto state 40
	Exp6           goto state 41
	Identifier     goto state 42

State 62

	St -> 'while' . '(' Exp ')' Block                   (rule 30)

	'('            shift, and enter state 94


State 63

	Block -> '{' ListSt '}' .                           (rule 4)

	'('            reduce using rule 4
	'-'            reduce using rule 4
	'bool'         reduce using rule 4
	'const'        reduce using rule 4
	'else'         reduce using rule 4
	'else if ('    reduce using rule 4
	'false'        reduce using rule 4
	'for'          reduce using rule 4
	'function'     reduce using rule 4
	'guard'        reduce using rule 4
	'if ('         reduce using rule 4
	'int'          reduce using rule 4
	'main'         reduce using rule 4
	'return'       reduce using rule 4
	'true'         reduce using rule 4
	'void'         reduce using rule 4
	'while'        reduce using rule 4
	'}'            reduce using rule 4
	L_integ        reduce using rule 4
	L_ident        reduce using rule 4
	%eof           reduce using rule 4


State 64

	FunctionDeclaration -> 'function' Type Identifier '(' . ListArguments ')' RBlock    (rule 14)

	')'            reduce using rule 23
	'bool'         shift, and enter state 14
	'int'          shift, and enter state 16

	Arguments      goto state 51
	ListArguments  goto state 93
	Type           goto state 53

State 65

	Exp5 -> '-' Exp6 .                                  (rule 57)

	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'||'           reduce using rule 57


State 66

	Exp -> Exp . '||' Exp1                              (rule 43)
	Exp -> Exp . '&&' Exp1                              (rule 44)
	Exp6 -> '(' Exp . ')'                               (rule 64)

	'&&'           shift, and enter state 75
	')'            shift, and enter state 92
	'||'           shift, and enter state 76


State 67

	Exp6 -> Identifier '(' . ListCallArgs ')'           (rule 59)

	'('            shift, and enter state 43
	')'            reduce using rule 20
	'-'            shift, and enter state 44
	'false'        shift, and enter state 45
	'true'         shift, and enter state 46
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	CallArgs       goto state 89
	ListCallArgs   goto state 90
	Expression     goto state 91
	Exp            goto state 35
	Exp1           goto state 36
	Exp2           goto state 37
	Exp3           goto state 38
	Exp4           goto state 39
	Exp5           goto state 40
	Exp6           goto state 41
	Identifier     goto state 42

State 68

	Exp4 -> Exp4 '*' . Exp5                             (rule 54)

	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 45
	'true'         shift, and enter state 46
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	Exp5           goto state 88
	Exp6           goto state 41
	Identifier     goto state 42

State 69

	Exp4 -> Exp4 '/' . Exp5                             (rule 55)

	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 45
	'true'         shift, and enter state 46
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	Exp5           goto state 87
	Exp6           goto state 41
	Identifier     goto state 42

State 70

	Exp3 -> Exp3 '+' . Exp4                             (rule 51)

	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 45
	'true'         shift, and enter state 46
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	Exp4           goto state 86
	Exp5           goto state 40
	Exp6           goto state 41
	Identifier     goto state 42

State 71

	Exp3 -> Exp3 '-' . Exp4                             (rule 52)

	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 45
	'true'         shift, and enter state 46
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	Exp4           goto state 85
	Exp5           goto state 40
	Exp6           goto state 41
	Identifier     goto state 42

State 72

	Exp2 -> Exp2 '<' . Exp3                             (rule 48)

	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 45
	'true'         shift, and enter state 46
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	Exp3           goto state 84
	Exp4           goto state 39
	Exp5           goto state 40
	Exp6           goto state 41
	Identifier     goto state 42

State 73

	Exp2 -> Exp2 '>' . Exp3                             (rule 49)

	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 45
	'true'         shift, and enter state 46
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	Exp3           goto state 83
	Exp4           goto state 39
	Exp5           goto state 40
	Exp6           goto state 41
	Identifier     goto state 42

State 74

	Exp1 -> Exp1 '==' . Exp2                            (rule 46)

	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 45
	'true'         shift, and enter state 46
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	Exp2           goto state 82
	Exp3           goto state 38
	Exp4           goto state 39
	Exp5           goto state 40
	Exp6           goto state 41
	Identifier     goto state 42

State 75

	Exp -> Exp '&&' . Exp1                              (rule 44)

	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 45
	'true'         shift, and enter state 46
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	Exp1           goto state 81
	Exp2           goto state 37
	Exp3           goto state 38
	Exp4           goto state 39
	Exp5           goto state 40
	Exp6           goto state 41
	Identifier     goto state 42

State 76

	Exp -> Exp '||' . Exp1                              (rule 43)

	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 45
	'true'         shift, and enter state 46
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	Exp1           goto state 80
	Exp2           goto state 37
	Exp3           goto state 38
	Exp4           goto state 39
	Exp5           goto state 40
	Exp6           goto state 41
	Identifier     goto state 42

State 77

	Decl -> Type Identifier '=' Expression ';' .        (rule 7)

	';'            reduce using rule 7
	'bool'         reduce using rule 7
	'const'        reduce using rule 7
	'function'     reduce using rule 7
	'int'          reduce using rule 7
	'main'         reduce using rule 7
	'void'         reduce using rule 7


State 78

	Decl -> 'const' Type Identifier '=' Expression . ';'    (rule 8)

	';'            shift, and enter state 79


State 79

	Decl -> 'const' Type Identifier '=' Expression ';' .    (rule 8)

	';'            reduce using rule 8
	'bool'         reduce using rule 8
	'const'        reduce using rule 8
	'function'     reduce using rule 8
	'int'          reduce using rule 8
	'main'         reduce using rule 8
	'void'         reduce using rule 8


State 80

	Exp -> Exp '||' Exp1 .                              (rule 43)
	Exp1 -> Exp1 . '==' Exp2                            (rule 46)

	'&&'           reduce using rule 43
	')'            reduce using rule 43
	','            reduce using rule 43
	';'            reduce using rule 43
	'=='           shift, and enter state 74
	'||'           reduce using rule 43


State 81

	Exp -> Exp '&&' Exp1 .                              (rule 44)
	Exp1 -> Exp1 . '==' Exp2                            (rule 46)

	'&&'           reduce using rule 44
	')'            reduce using rule 44
	','            reduce using rule 44
	';'            reduce using rule 44
	'=='           shift, and enter state 74
	'||'           reduce using rule 44


State 82

	Exp1 -> Exp1 '==' Exp2 .                            (rule 46)
	Exp2 -> Exp2 . '<' Exp3                             (rule 48)
	Exp2 -> Exp2 . '>' Exp3                             (rule 49)

	'&&'           reduce using rule 46
	')'            reduce using rule 46
	','            reduce using rule 46
	';'            reduce using rule 46
	'<'            shift, and enter state 72
	'=='           reduce using rule 46
	'>'            shift, and enter state 73
	'||'           reduce using rule 46


State 83

	Exp2 -> Exp2 '>' Exp3 .                             (rule 49)
	Exp3 -> Exp3 . '+' Exp4                             (rule 51)
	Exp3 -> Exp3 . '-' Exp4                             (rule 52)

	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'+'            shift, and enter state 70
	','            reduce using rule 49
	'-'            shift, and enter state 71
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'||'           reduce using rule 49


State 84

	Exp2 -> Exp2 '<' Exp3 .                             (rule 48)
	Exp3 -> Exp3 . '+' Exp4                             (rule 51)
	Exp3 -> Exp3 . '-' Exp4                             (rule 52)

	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'+'            shift, and enter state 70
	','            reduce using rule 48
	'-'            shift, and enter state 71
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'||'           reduce using rule 48


State 85

	Exp3 -> Exp3 '-' Exp4 .                             (rule 52)
	Exp4 -> Exp4 . '*' Exp5                             (rule 54)
	Exp4 -> Exp4 . '/' Exp5                             (rule 55)

	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            shift, and enter state 68
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            shift, and enter state 69
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'||'           reduce using rule 52


State 86

	Exp3 -> Exp3 '+' Exp4 .                             (rule 51)
	Exp4 -> Exp4 . '*' Exp5                             (rule 54)
	Exp4 -> Exp4 . '/' Exp5                             (rule 55)

	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            shift, and enter state 68
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            shift, and enter state 69
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'||'           reduce using rule 51


State 87

	Exp4 -> Exp4 '/' Exp5 .                             (rule 55)

	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'||'           reduce using rule 55


State 88

	Exp4 -> Exp4 '*' Exp5 .                             (rule 54)

	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'||'           reduce using rule 54


State 89

	ListCallArgs -> CallArgs .                          (rule 21)
	ListCallArgs -> CallArgs . ',' ListCallArgs         (rule 22)

	')'            reduce using rule 21
	','            shift, and enter state 126


State 90

	Exp6 -> Identifier '(' ListCallArgs . ')'           (rule 59)

	')'            shift, and enter state 125


State 91

	CallArgs -> Expression .                            (rule 18)

	')'            reduce using rule 18
	','            reduce using rule 18


State 92

	Exp6 -> '(' Exp ')' .                               (rule 64)

	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'/'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'||'           reduce using rule 64


State 93

	FunctionDeclaration -> 'function' Type Identifier '(' ListArguments . ')' RBlock    (rule 14)

	')'            shift, and enter state 124


State 94

	St -> 'while' '(' . Exp ')' Block                   (rule 30)

	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 45
	'true'         shift, and enter state 46
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	Exp            goto state 123
	Exp1           goto state 36
	Exp2           goto state 37
	Exp3           goto state 38
	Exp4           goto state 39
	Exp5           goto state 40
	Exp6           goto state 41
	Identifier     goto state 42

State 95

	St -> 'if (' Exp . ')' Block ListEIf 'else' Block    (rule 33)
	Exp -> Exp . '||' Exp1                              (rule 43)
	Exp -> Exp . '&&' Exp1                              (rule 44)

	'&&'           shift, and enter state 75
	')'            shift, and enter state 122
	'||'           shift, and enter state 76


State 96

	St -> 'guard' '(' . ListIdentifier ')' 'in' Block    (rule 32)

	')'            reduce using rule 39
	L_ident        shift, and enter state 10

	Ident          goto state 8
	ListIdentifier goto state 120
	Identifier     goto state 121

State 97

	St -> 'for' '(' . Decl ';' Exp ';' Assignment ')' Block    (rule 31)

	'bool'         shift, and enter state 14
	'const'        shift, and enter state 15
	'int'          shift, and enter state 16

	Decl           goto state 119
	Type           goto state 13

State 98

	Assignment -> Identifier ArAssign . Expression      (rule 66)

	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 45
	'true'         shift, and enter state 46
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	Expression     goto state 118
	Exp            goto state 35
	Exp1           goto state 36
	Exp2           goto state 37
	Exp3           goto state 38
	Exp4           goto state 39
	Exp5           goto state 40
	Exp6           goto state 41
	Identifier     goto state 42

State 99

	Assignment -> Identifier IncDec .                   (rule 67)

	')'            reduce using rule 67
	';'            reduce using rule 67


State 100

	St -> Identifier '(' . ListCallArgs ')' ';'         (rule 29)
	Exp6 -> Identifier '(' . ListCallArgs ')'           (rule 59)

	'('            shift, and enter state 43
	')'            reduce using rule 20
	'-'            shift, and enter state 44
	'false'        shift, and enter state 45
	'true'         shift, and enter state 46
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	CallArgs       goto state 89
	ListCallArgs   goto state 117
	Expression     goto state 91
	Exp            goto state 35
	Exp1           goto state 36
	Exp2           goto state 37
	Exp3           goto state 38
	Exp4           goto state 39
	Exp5           goto state 40
	Exp6           goto state 41
	Identifier     goto state 42

State 101

	ArAssign -> '*=' .                                  (rule 73)

	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'true'         reduce using rule 73
	L_integ        reduce using rule 73
	L_ident        reduce using rule 73


State 102

	IncDec -> '++' .                                    (rule 75)

	')'            reduce using rule 75
	';'            reduce using rule 75


State 103

	ArAssign -> '+=' .                                  (rule 71)

	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_integ        reduce using rule 71
	L_ident        reduce using rule 71


State 104

	IncDec -> '--' .                                    (rule 76)

	')'            reduce using rule 76
	';'            reduce using rule 76


State 105

	ArAssign -> '-=' .                                  (rule 72)

	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_integ        reduce using rule 72
	L_ident        reduce using rule 72


State 106

	ArAssign -> '/=' .                                  (rule 74)

	'('            reduce using rule 74
	'-'            reduce using rule 74
	'false'        reduce using rule 74
	'true'         reduce using rule 74
	L_integ        reduce using rule 74
	L_ident        reduce using rule 74


State 107

	Assignment -> Identifier '=' . Expression           (rule 65)

	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 45
	'true'         shift, and enter state 46
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	Expression     goto state 116
	Exp            goto state 35
	Exp1           goto state 36
	Exp2           goto state 37
	Exp3           goto state 38
	Exp4           goto state 39
	Exp5           goto state 40
	Exp6           goto state 41
	Identifier     goto state 42

State 108

	St -> Assignment ';' .                              (rule 27)

	'('            reduce using rule 27
	'-'            reduce using rule 27
	'bool'         reduce using rule 27
	'const'        reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'guard'        reduce using rule 27
	'if ('         reduce using rule 27
	'int'          reduce using rule 27
	'return'       reduce using rule 27
	'true'         reduce using rule 27
	'while'        reduce using rule 27
	'}'            reduce using rule 27
	L_integ        reduce using rule 27
	L_ident        reduce using rule 27


State 109

	St -> Expression ';' .                              (rule 28)

	'('            reduce using rule 28
	'-'            reduce using rule 28
	'bool'         reduce using rule 28
	'const'        reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'guard'        reduce using rule 28
	'if ('         reduce using rule 28
	'int'          reduce using rule 28
	'return'       reduce using rule 28
	'true'         reduce using rule 28
	'while'        reduce using rule 28
	'}'            reduce using rule 28
	L_integ        reduce using rule 28
	L_ident        reduce using rule 28


State 110

	St -> Decl ';' .                                    (rule 26)

	'('            reduce using rule 26
	'-'            reduce using rule 26
	'bool'         reduce using rule 26
	'const'        reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'guard'        reduce using rule 26
	'if ('         reduce using rule 26
	'int'          reduce using rule 26
	'return'       reduce using rule 26
	'true'         reduce using rule 26
	'while'        reduce using rule 26
	'}'            reduce using rule 26
	L_integ        reduce using rule 26
	L_ident        reduce using rule 26


State 111

	Arguments -> Type Identifier .                      (rule 19)

	')'            reduce using rule 19
	','            reduce using rule 19


State 112

	FunctionDeclaration -> 'void' Identifier '(' ListArguments ')' . Block    (rule 15)

	'{'            shift, and enter state 27

	Block          goto state 115

State 113

	ListArguments -> Arguments ',' . ListArguments      (rule 25)

	')'            reduce using rule 23
	'bool'         shift, and enter state 14
	'int'          shift, and enter state 16

	Arguments      goto state 51
	ListArguments  goto state 114
	Type           goto state 53

State 114

	ListArguments -> Arguments ',' ListArguments .      (rule 25)

	')'            reduce using rule 25


State 115

	FunctionDeclaration -> 'void' Identifier '(' ListArguments ')' Block .    (rule 15)

	'function'     reduce using rule 15
	'main'         reduce using rule 15
	'void'         reduce using rule 15


State 116

	Assignment -> Identifier '=' Expression .           (rule 65)

	')'            reduce using rule 65
	';'            reduce using rule 65


State 117

	St -> Identifier '(' ListCallArgs . ')' ';'         (rule 29)
	Exp6 -> Identifier '(' ListCallArgs . ')'           (rule 59)

	')'            shift, and enter state 135


State 118

	Assignment -> Identifier ArAssign Expression .      (rule 66)

	')'            reduce using rule 66
	';'            reduce using rule 66


State 119

	St -> 'for' '(' Decl . ';' Exp ';' Assignment ')' Block    (rule 31)

	';'            shift, and enter state 134


State 120

	St -> 'guard' '(' ListIdentifier . ')' 'in' Block    (rule 32)

	')'            shift, and enter state 133


State 121

	ListIdentifier -> Identifier .                      (rule 40)
	ListIdentifier -> Identifier . ',' ListIdentifier    (rule 41)

	')'            reduce using rule 40
	','            shift, and enter state 132


State 122

	St -> 'if (' Exp ')' . Block ListEIf 'else' Block    (rule 33)

	'{'            shift, and enter state 27

	Block          goto state 131

State 123

	St -> 'while' '(' Exp . ')' Block                   (rule 30)
	Exp -> Exp . '||' Exp1                              (rule 43)
	Exp -> Exp . '&&' Exp1                              (rule 44)

	'&&'           shift, and enter state 75
	')'            shift, and enter state 130
	'||'           shift, and enter state 76


State 124

	FunctionDeclaration -> 'function' Type Identifier '(' ListArguments ')' . RBlock    (rule 14)

	'{'            shift, and enter state 129

	RBlock         goto state 128

State 125

	Exp6 -> Identifier '(' ListCallArgs ')' .           (rule 59)

	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'||'           reduce using rule 59


State 126

	ListCallArgs -> CallArgs ',' . ListCallArgs         (rule 22)

	'('            shift, and enter state 43
	')'            reduce using rule 20
	'-'            shift, and enter state 44
	'false'        shift, and enter state 45
	'true'         shift, and enter state 46
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	CallArgs       goto state 89
	ListCallArgs   goto state 127
	Expression     goto state 91
	Exp            goto state 35
	Exp1           goto state 36
	Exp2           goto state 37
	Exp3           goto state 38
	Exp4           goto state 39
	Exp5           goto state 40
	Exp6           goto state 41
	Identifier     goto state 42

State 127

	ListCallArgs -> CallArgs ',' ListCallArgs .         (rule 22)

	')'            reduce using rule 22


State 128

	FunctionDeclaration -> 'function' Type Identifier '(' ListArguments ')' RBlock .    (rule 14)

	'function'     reduce using rule 14
	'main'         reduce using rule 14
	'void'         reduce using rule 14


State 129

	RBlock -> '{' . ListSt 'return' Expression ';' '}'    (rule 5)

	'('            reduce using rule 34
	'-'            reduce using rule 34
	'bool'         reduce using rule 34
	'const'        reduce using rule 34
	'false'        reduce using rule 34
	'for'          reduce using rule 34
	'guard'        reduce using rule 34
	'if ('         reduce using rule 34
	'int'          reduce using rule 34
	'return'       reduce using rule 34
	'true'         reduce using rule 34
	'while'        reduce using rule 34
	L_integ        reduce using rule 34
	L_ident        reduce using rule 34

	ListSt         goto state 142

State 130

	St -> 'while' '(' Exp ')' . Block                   (rule 30)

	'{'            shift, and enter state 27

	Block          goto state 141

State 131

	St -> 'if (' Exp ')' Block . ListEIf 'else' Block    (rule 33)

	'else'         reduce using rule 37
	'else if ('    reduce using rule 37

	ListEIf        goto state 140

State 132

	ListIdentifier -> Identifier ',' . ListIdentifier    (rule 41)

	')'            reduce using rule 39
	L_ident        shift, and enter state 10

	Ident          goto state 8
	ListIdentifier goto state 139
	Identifier     goto state 121

State 133

	St -> 'guard' '(' ListIdentifier ')' . 'in' Block    (rule 32)

	'in'           shift, and enter state 138


State 134

	St -> 'for' '(' Decl ';' . Exp ';' Assignment ')' Block    (rule 31)

	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 45
	'true'         shift, and enter state 46
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	Exp            goto state 137
	Exp1           goto state 36
	Exp2           goto state 37
	Exp3           goto state 38
	Exp4           goto state 39
	Exp5           goto state 40
	Exp6           goto state 41
	Identifier     goto state 42

State 135

	St -> Identifier '(' ListCallArgs ')' . ';'         (rule 29)
	Exp6 -> Identifier '(' ListCallArgs ')' .           (rule 59)

	'&&'           reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	';'            shift, and enter state 136
			(reduce using rule 59)

	'<'            reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'||'           reduce using rule 59


State 136

	St -> Identifier '(' ListCallArgs ')' ';' .         (rule 29)

	'('            reduce using rule 29
	'-'            reduce using rule 29
	'bool'         reduce using rule 29
	'const'        reduce using rule 29
	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'guard'        reduce using rule 29
	'if ('         reduce using rule 29
	'int'          reduce using rule 29
	'return'       reduce using rule 29
	'true'         reduce using rule 29
	'while'        reduce using rule 29
	'}'            reduce using rule 29
	L_integ        reduce using rule 29
	L_ident        reduce using rule 29


State 137

	St -> 'for' '(' Decl ';' Exp . ';' Assignment ')' Block    (rule 31)
	Exp -> Exp . '||' Exp1                              (rule 43)
	Exp -> Exp . '&&' Exp1                              (rule 44)

	'&&'           shift, and enter state 75
	';'            shift, and enter state 148
	'||'           shift, and enter state 76


State 138

	St -> 'guard' '(' ListIdentifier ')' 'in' . Block    (rule 32)

	'{'            shift, and enter state 27

	Block          goto state 147

State 139

	ListIdentifier -> Identifier ',' ListIdentifier .    (rule 41)

	')'            reduce using rule 41


State 140

	St -> 'if (' Exp ')' Block ListEIf . 'else' Block    (rule 33)
	ListEIf -> ListEIf . EIf                            (rule 38)

	'else'         shift, and enter state 145
	'else if ('    shift, and enter state 146

	EIf            goto state 144

State 141

	St -> 'while' '(' Exp ')' Block .                   (rule 30)

	'('            reduce using rule 30
	'-'            reduce using rule 30
	'bool'         reduce using rule 30
	'const'        reduce using rule 30
	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'guard'        reduce using rule 30
	'if ('         reduce using rule 30
	'int'          reduce using rule 30
	'return'       reduce using rule 30
	'true'         reduce using rule 30
	'while'        reduce using rule 30
	'}'            reduce using rule 30
	L_integ        reduce using rule 30
	L_ident        reduce using rule 30


State 142

	RBlock -> '{' ListSt . 'return' Expression ';' '}'    (rule 5)
	ListSt -> ListSt . St                               (rule 35)

	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'bool'         shift, and enter state 14
	'const'        shift, and enter state 15
	'false'        shift, and enter state 45
	'for'          shift, and enter state 59
	'guard'        shift, and enter state 60
	'if ('         shift, and enter state 61
	'int'          shift, and enter state 16
	'return'       shift, and enter state 143
	'true'         shift, and enter state 46
	'while'        shift, and enter state 62
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	Decl           goto state 54
	St             goto state 55
	Expression     goto state 56
	Exp            goto state 35
	Exp1           goto state 36
	Exp2           goto state 37
	Exp3           goto state 38
	Exp4           goto state 39
	Exp5           goto state 40
	Exp6           goto state 41
	Assignment     goto state 57
	Type           goto state 13
	Identifier     goto state 58

State 143

	RBlock -> '{' ListSt 'return' . Expression ';' '}'    (rule 5)

	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 45
	'true'         shift, and enter state 46
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	Expression     goto state 153
	Exp            goto state 35
	Exp1           goto state 36
	Exp2           goto state 37
	Exp3           goto state 38
	Exp4           goto state 39
	Exp5           goto state 40
	Exp6           goto state 41
	Identifier     goto state 42

State 144

	ListEIf -> ListEIf EIf .                            (rule 38)

	'else'         reduce using rule 38
	'else if ('    reduce using rule 38


State 145

	St -> 'if (' Exp ')' Block ListEIf 'else' . Block    (rule 33)

	'{'            shift, and enter state 27

	Block          goto state 152

State 146

	EIf -> 'else if (' . Exp ')' Block                  (rule 36)

	'('            shift, and enter state 43
	'-'            shift, and enter state 44
	'false'        shift, and enter state 45
	'true'         shift, and enter state 46
	L_integ        shift, and enter state 2
	L_ident        shift, and enter state 10

	Integer        goto state 33
	Ident          goto state 8
	Exp            goto state 151
	Exp1           goto state 36
	Exp2           goto state 37
	Exp3           goto state 38
	Exp4           goto state 39
	Exp5           goto state 40
	Exp6           goto state 41
	Identifier     goto state 42

State 147

	St -> 'guard' '(' ListIdentifier ')' 'in' Block .    (rule 32)

	'('            reduce using rule 32
	'-'            reduce using rule 32
	'bool'         reduce using rule 32
	'const'        reduce using rule 32
	'false'        reduce using rule 32
	'for'          reduce using rule 32
	'guard'        reduce using rule 32
	'if ('         reduce using rule 32
	'int'          reduce using rule 32
	'return'       reduce using rule 32
	'true'         reduce using rule 32
	'while'        reduce using rule 32
	'}'            reduce using rule 32
	L_integ        reduce using rule 32
	L_ident        reduce using rule 32


State 148

	St -> 'for' '(' Decl ';' Exp ';' . Assignment ')' Block    (rule 31)

	L_ident        shift, and enter state 10

	Ident          goto state 8
	Assignment     goto state 149
	Identifier     goto state 150

State 149

	St -> 'for' '(' Decl ';' Exp ';' Assignment . ')' Block    (rule 31)

	')'            shift, and enter state 156


State 150

	Assignment -> Identifier . '=' Expression           (rule 65)
	Assignment -> Identifier . ArAssign Expression      (rule 66)
	Assignment -> Identifier . IncDec                   (rule 67)

	'*='           shift, and enter state 101
	'++'           shift, and enter state 102
	'+='           shift, and enter state 103
	'--'           shift, and enter state 104
	'-='           shift, and enter state 105
	'/='           shift, and enter state 106
	'='            shift, and enter state 107

	ArAssign       goto state 98
	IncDec         goto state 99

State 151

	EIf -> 'else if (' Exp . ')' Block                  (rule 36)
	Exp -> Exp . '||' Exp1                              (rule 43)
	Exp -> Exp . '&&' Exp1                              (rule 44)

	'&&'           shift, and enter state 75
	')'            shift, and enter state 155
	'||'           shift, and enter state 76


State 152

	St -> 'if (' Exp ')' Block ListEIf 'else' Block .    (rule 33)

	'('            reduce using rule 33
	'-'            reduce using rule 33
	'bool'         reduce using rule 33
	'const'        reduce using rule 33
	'false'        reduce using rule 33
	'for'          reduce using rule 33
	'guard'        reduce using rule 33
	'if ('         reduce using rule 33
	'int'          reduce using rule 33
	'return'       reduce using rule 33
	'true'         reduce using rule 33
	'while'        reduce using rule 33
	'}'            reduce using rule 33
	L_integ        reduce using rule 33
	L_ident        reduce using rule 33


State 153

	RBlock -> '{' ListSt 'return' Expression . ';' '}'    (rule 5)

	';'            shift, and enter state 154


State 154

	RBlock -> '{' ListSt 'return' Expression ';' . '}'    (rule 5)

	'}'            shift, and enter state 159


State 155

	EIf -> 'else if (' Exp ')' . Block                  (rule 36)

	'{'            shift, and enter state 27

	Block          goto state 158

State 156

	St -> 'for' '(' Decl ';' Exp ';' Assignment ')' . Block    (rule 31)

	'{'            shift, and enter state 27

	Block          goto state 157

State 157

	St -> 'for' '(' Decl ';' Exp ';' Assignment ')' Block .    (rule 31)

	'('            reduce using rule 31
	'-'            reduce using rule 31
	'bool'         reduce using rule 31
	'const'        reduce using rule 31
	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'guard'        reduce using rule 31
	'if ('         reduce using rule 31
	'int'          reduce using rule 31
	'return'       reduce using rule 31
	'true'         reduce using rule 31
	'while'        reduce using rule 31
	'}'            reduce using rule 31
	L_integ        reduce using rule 31
	L_ident        reduce using rule 31


State 158

	EIf -> 'else if (' Exp ')' Block .                  (rule 36)

	'else'         reduce using rule 36
	'else if ('    reduce using rule 36


State 159

	RBlock -> '{' ListSt 'return' Expression ';' '}' .    (rule 5)

	'function'     reduce using rule 5
	'main'         reduce using rule 5
	'void'         reduce using rule 5


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 82
Number of terminals: 43
Number of non-terminals: 36
Number of states: 160
