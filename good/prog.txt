# Deklaracja zmiennej globalnej
const int test = 0;

# Prosta funkcja operująca na dwóch argumentach i przesłoniętym
# y (z punktu widzenia bloku main)
function plus (int x, int z) : int
{
    int y;
    y = x + z;
    return y;
}

function factorial (int f) : int
{
    return f > 1 ? f * factorial(f - 1) : 1;
}

function inc (int x) : int {
    x++;
    return x;
}

function dec (int x) : int {
    x--;
    return x;
}

main {
    # Deklaracja zmiennej x z wartością 5
    int x = 5;
    # Deklaracja zmiennej y z domyślną wartością 0
    int y;

    print("*** Test funkcji ***");
    print(plus(x,y+1));
    inc(&y);
    print(y);
    dec(&y);
    print(y);

    print("*** Test rekurencji ***");
    print(factorial(5));

    # Wykorzystanie funkcji jako procedury
    factorial(5);

    print("*** For ***");
    from 1 to 5 as loop do
    {
        print(loop);
    }
    print("Koniec for");
    # Zmienna loop w tym miejscu nie istnieje
    # print(loop);

    # Test zmiennej globalnej
    print(test);

    # Nielegalna linijka -> test to stała
    # test++;

    # Blok guard: x w środku będzie stałą
    guard (x) in {
        print("Wejscie do bloku guard");
        # Wypisuje 5
        print(x);

        # Nielegalne nadpisanie wartości
        # x++;
    }

    # Zwikszenie x o 1, powinno wypisa si 6
    x++;
    print(x);

    # x == 6, zatem oczekujemy "true" na konsoli
    print("*** Test logiki boolowskiej ***");
    if (x > 3)
    {
        print(true);
    }
    # Obie ponisze linijki wypisayby 12, ale nie powinny zaj
    else if (true) {print (x * 2);}
    else {print (x*2);}

    # x to nadal 6, oczekujemy faszu na konsoli
    if (x > 2 && x < 4)
        {x += 1;}
    else
    {
        print (false);
    }

    # Powinny wypisa si wartoci od 7 do 10
    while (x < 10 || x < 9)
    {
        x++;
        print(x);
    }

    # Ternary expression jak w Javie/C++
    # y == 0 z domylnej definicji, wic oczekujemy '1' na konosli
    y = y == 0 ? 1 : -1;
    print(y);

    # Dzielenie jest cakowitoliczbowe, wic powinno wypisa si 0
    print(y / 2);

    # Powinno wypisa si 5
    y = 10;
    y /= 2;
    print(y);

    # x == 10 y == 5, powinno wypisa si 61
    print (x * (y + 1) + 1);
}